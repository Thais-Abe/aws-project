name: Terraform Workflow

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: sa-east-1

      - name: Terraform Format (Automatic)
        run: terraform fmt -recursive

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="dev.config"

      - name: Terraform Import 
        run: |
       - name: Terraform Import 
        run: |
          terraform import module.iam.aws_iam_role.lambda_exec_role lambda_exec_role || true
          terraform import module.cognito.aws_iam_policy.cognito_management arn:aws:iam::SEU_ID:policy/cognito-management-policy || true
          terraform import module.dynamodb.aws_dynamodb_table.bakery-bank bakery-bank || true
          terraform import module.dynamodb_lock.aws_dynamodb_table.terraform_locks terraform-locks || true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform workspace select dev || terraform workspace new dev
          terraform plan -var-file="./environments/dev/terraform.tfvars" -out="dev.plan"

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve "dev.plan"
